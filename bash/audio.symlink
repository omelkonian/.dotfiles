alias fixSound="pactl exit"
alias fixSound2="amixer -D pulse set Master 1+ toggle"
alias restart_sound="pulseaudio -k && sudo alsa force-reload"
alias unmute="pacmd set-sink-mute 0 0"

# Conversion
function mp3_to_wav {
  lame --decode $1.mp3 $1.wav
}

# Editing
function extract_left_channel {
  sox $1 -c 1 "${1%.*}"_L.wav remix 1
}
function extract_right_channel {
  fname="${1%.*}"
  sox $1 -c 1 "${1%.*}"_R.wav remix 2
}

# Speaker test
alias check_channels="play ~/Sounds/hypnotic_L.wav && play ~/Sounds/hypnotic_R.wav"

# Spotify
alias rip='spotify-ripper -d $MUSIC_ROOT'
alias rip_local='spotify-ripper -d $LOCAL_MUSIC_ROOT'

## Sink management (Pulse Audio)
function searchSink {
  pactl list sinks | grep $1 -B 2 | grep 'Sink #' | grep -o -E '[[:digit:]]+'
}

function getSinkIndex {
  internal=$(searchSink "Name:.*alsa_output.pci")
  external=$(searchSink "Name:.*Saffire")
  bluetooth=$(searchSink "Name:.*bluez")

  if [[ $bluetooth ]]; then
    i=$bluetooth
  elif [[ $external ]]; then
    i=$external
  elif [[ $internal ]]; then
    i=$internal
  else
    i=0
  fi
  pacmd set-default-sink $i
  echo $i
}

function getSinkVolume {
  i=$(getSinkIndex)
  pactl list sinks | grep "Sink #${i}" -A10 | grep -o -E '[[:digit:]]+%' | head -1
}

function setSinkVolume {
  i=$(getSinkIndex)
  pactl set-sink-volume $i $1
}

# function getDefaultSink {
#   pacmd list-sinks | awk '$1 == "*" && $2 == "index:" {print $3}'
# }

## Music controls
function audio__play_pause {
  if [ -n "$(pgrep clementine)" ] ; then
    clementine --play-pause

  fi
  if [ -n "$(pgrep rhythmbox)" ] ; then
    rhythmbox-client --play-pause
  fi
}

function audio__next {
  if [ -n "$(pgrep clementine)" ] ; then
    clementine --next

  fi
  if [ -n "$(pgrep rhythmbox)" ] ; then
    rhythmbox-client --next
  fi
}

function audio__prev {
  if [ -n "$(pgrep clementine)" ] ; then
    clementine --prev

  fi
  if [ -n "$(pgrep rhythmbox)" ] ; then
    rhythmbox-client --prev
  fi
}
