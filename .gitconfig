[credential]
  helper = cache --timeout=3600
[user]
  email = melkon.or@gmail.com
  name = Orestis Melkonian
[color]
  ui = auto # covers diff = true, status = auto, branch = auto
  interactive = auto
[alias]
  alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort

  # Ignore
  ignore = update-index --assume-unchanged
  unignore = update-index --no-assume-unchanged
  ignored = !git ls-files -v | grep "^[[:lower:]]"



  # General
  s = status

  # Commits
  c = commit
  cm = commit -m
  cs = commit -s
  csm = commit -sm
  ca = commit --amend
  can = commit --amend --no-edit
  csa = commit -s --amend
  cf = "!f(){ git commit --fixup=\"$1\" && git rebase -i --autosquash \"$1\"^;};f"

  # Add
  a = add
  all = add -A

  # Logging
  l = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
  ll = log --stat --abbrev-commit
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  lg2 = log --graph --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset'

  # Diff
  d = diff --color-words

  # Branches
  rs = remote -v
  br = branch
  brd = branch -D
  rrm = remote rm
  rad = "!f() { git remote add origin https://github.com/"$1"/"$2".git; }; f"
  rau = "!f() { git remote add upstream https://github.com/"$1"/"$2".git; }; f"
  fall = fetch --all

  # Pull
  pp = pull

  # Push
  p = push origin
  pf = push -f origin
  pu = push -u origin master
  update = !git all && git can && git pf

  # Rebase
  r = rebase
  ri = rebase --interactive
  rco = rebase --continue
  rab = rebase --abort

  # Checkout
  ch = checkout
  chm = checkout master
  chb = checkout -b
  undo = "!f() {git reset --hard $(git rev-parse --abbrev-ref HEAD)@{${1-1}};}; f"
  chpr = "!f(){ \
        if [ $(printf \"%s\" \"$2\" | grep '^[0-9]\\+$' > /dev/null; printf $?) -eq 0 ]; then \
          git fetch $1 refs/pull/$2/head:pr/$2 && \
          git checkout pr/$2; \
        fi \
      }; f"

  # Clone
  cl = "!f() { git clone https://github.com/"$1"/"$2".git; }; f"

  # Reset
  rh = reset --hard

[core]
  excludesfile = ~/.gitignore
  editor = subl -w
  pager = less -r
[push]
  default = simple
